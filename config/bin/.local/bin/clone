#!/bin/bash

if [ -z "$1" ]; then
    echo "Error: clone_url argument is missing"
    echo "Usage: clone <clone_url>"
    exit 1
fi

clone_url=$1

parse_ssh_config() {
    local config_file="$1"
    # Check if file exists
    if [[ ! -f "$config_file" ]]; then
        return
    fi

    while read -r line; do
        # Handle Include directives
        if [[ "$line" =~ ^[[:space:]]*Include[[:space:]]+(.*) ]]; then
            include_path="${BASH_REMATCH[1]}"
            # Expand ~ to $HOME if present
            include_path="${include_path/#\~/$HOME}"
            # Handle wildcards in include paths
            for f in $include_path; do
                parse_ssh_config "$f"
            done
        # Get Host entries (ignore Host *)
        elif [[ "$line" =~ ^[[:space:]]*Host[[:space:]]+(.*) ]]; then
            host="${BASH_REMATCH[1]}"
            if [[ "$host" != "*" ]]; then
                echo "$host"
            fi
        fi
    done < "$config_file"
}

# Start with main config file
config=$(parse_ssh_config ~/.ssh/config | fzf --tmux center)
if [ $? -eq 130 ]; then exit 0; fi

url=$(echo "$clone_url" | sed "s|github.com|$config|")
git clone $url
